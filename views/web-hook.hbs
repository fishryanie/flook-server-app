<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <title>Flook-app</title>
  <link rel="icon" href="https://cdn-icons-png.flaticon.com/512/4231/4231635.png" />
  <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css'>
  <link rel='stylesheet' href='https://fonts.googleapis.com/icon?family=Material+Icons'>
  <link rel='stylesheet'
    href='https://fonts.googleapis.com/css?family=Architects+Daughter|Roboto&amp;subset=latin,devanagari'>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css"
    integrity="sha512-KfkfwYDsLkIlwQp6LFnl8zNdLGxu9YAA1QvwINks4PhcElQSvqcyVLLD9aMhXd13uQjoXtEKNosOWaZqXgel0g=="
    crossorigin="anonymous" referrerpolicy="no-referrer" />
  <link href='https://unpkg.com/boxicons@2.1.2/css/boxicons.min.css' rel='stylesheet'>
  <link rel='stylesheet' href='https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css'>
  <link rel="stylesheet" href="./web-hook.css">
</head>



<body class="welcome">
  <span id="splash-overlay" class="splash"></span>
  <span id="welcome" class="z-depth-4"></span>
  <div id="toast"></div>
  <!-- <div style="height: 100vh; width: 85%; background-color: transparent; position: absolute; top: 0; right: 0; z-index: 999;">
      <div style="height: 100vh; width: 5%; background-color: transparent; padding-top: 70px">
        <div style="background-color: yellow; width: 100%; height: 50px; border-radius: 25px 0px 0px 25px;padding-left: 15px; font-size: 30px;">x</div>
      </div>
    
    </div> -->
  <header class="navbar-fixed">
    <nav class="row deep-purple darken-3">
      <div class="col s12">
        <ul>
          <li style="margin: 10px"><img src="https://cdn-icons-png.flaticon.com/512/4231/4231635.png" width="30px"
              alt=""></li>
          <li class="title">Flook-server</li>
        </ul>
        <ul class="right">
          <li class="right" onclick="showSuccessToast();" >
            <a class="fa-solid fa-database fa-2x waves-effect waves-light"><span class="icon-text"></span></a>
          </li>
          <li class="right">
            <a href="https://www.facebook.com/fishryanie/" target="_blank"
              class="fa fa-facebook-square fa-2x waves-effect waves-light"><span class="icon-text"></span></a>
          </li>
          <li class="right">
            <a href="https://github.com/fishryanie" target="_blank"
              class="fa fa-github-square fa-2x waves-effect waves-light"><span class="icon-text"></span></a>
          </li>

        </ul>
      </div>
    </nav>
  </header>

  <main class="valign-wrapper">
    <span class="container grey-text text-lighten-1 ">

      <p class="flow-text">Welcome to</p>
      <h1 class="title grey-text text-lighten-3">Flook Inbound Webhook</h1>

      <blockquote class="flow-text">A place to create an inbound webhook to process your Flook-app data using the API.
      </blockquote>

      <div>
        <!-- Dropdown Trigger -->
        <a class="btn dropdown-button" data-activates="exams" id="select-domain">Select request builder<i
            class="material-icons right">expand_more</i></a>
        <!-- Dropdown Structure -->
        <ul id="exams" class="dropdown-content doamin"></ul>

        <a class="btn" id="addParam">+ Add parameter</a>

        <a class="btn">+ Add body</a>

        <strong style="margin-top: 30px">Parameter</strong>
        <div class="renderParamter animation" style="max-height: 120px; overflow-y: auto;"></div>
       

        <strong>Url</strong>
        <div class="input animation">
          <input id="url" type="text" placeholder="URL">
        </div>
        <div style="text-align: left; margin-top: 30px">
          <a class="btn" id="execute">Execute</a>
        </div>
      </div>


    </span>

    <ul class="squares"></ul>


  </main>


  <div class="fixed-action-btn">
    <a href="#message" class="modal-trigger btn btn-large btn-floating amber waves-effect waves-light">
      <i class="large material-icons">message</i>
    </a>
  </div>

  <div id="message" class="modal modal-fixed-footer">
    <div class="modal-content">
      <h4>Contact</h4>
      <p>coming soon...</p>
    </div>
    <div class="modal-footer">
      <a href="" class="modal-action modal-close waves-effect btn-flat">close</a>
    </div>
  </div>

  <footer class="page-footer deep-purple darken-3">
    <div class="footer-copyright deep-purple darken-4">
      <div class="container">
        <time datetime="site.time | date: '%Y'">&copy; 2022 Hồng Quân</time>
      </div>
    </div>
  </footer>
  <!-- partial -->

  <!-- Messenger Plugin chat Code -->
  <div id="fb-root"></div>

  <!-- Your Plugin chat code -->
  <div id="fb-customer-chat" class="fb-customerchat">
  </div>






  <!-- <script>
    var chatbox = document.getElementById('fb-customer-chat');
    chatbox.setAttribute("page_id", "101399909296622");
    chatbox.setAttribute("attribution", "biz_inbox");
  </script> -->

  <!-- Your SDK code -->
  <!-- <script>
    window.fbAsyncInit = function () {
      FB.init({
        xfbml: true,
        version: 'v14.0'
      });
    };

    (function (d, s, id) {
      var js, fjs = d.getElementsByTagName(s)[0];
      if (d.getElementById(id)) return;
      js = d.createElement(s); js.id = id;
      js.src = 'https://connect.facebook.net/vi_VN/sdk/xfbml.customerchat.js';
      fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));
  </script> -->
  <script src="https://code.jquery.com/jquery-3.6.0.js" integrity="sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk="crossorigin="anonymous"></script>

  <script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.2/jquery.min.js'></script>
  <script src='https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.6/js/materialize.min.js'></script>
  <script>
    $(document).ready(function () { $(`.modal-tigger`).leanModal() })
    $( window ).on( "load", function() { console.log( "window loaded" )});

    const arrayDomain = [
      { title: 'GET&trade; Roles List', link: '/api/role-management/findMany' },
      { title: 'GET&trade; Genres List', link: '/api/genre-management/findMany' },
      { title: 'GET&trade; Users List', link: '/api/user-management/findManyUser' },
      { title: 'GET&trade; Authors List', link: '/api/author-management/findMany' },
      { title: 'GET&trade; Manga List', link: '/api/ebooks-management/findManyManga?page=1&sort=0' },
      { title: 'GET&trade; Chapters List', link: '' },
      { title: 'GET&trade; Reviews List', link: '' },
      { title: 'GET&trade; Comments List', link: '' },
      { title: 'GET&trade; Manga Get', link: '/api/ebooks-management/fineOneManga' },
      { title: 'POST&trade; Sample Post', link: '/api/data-management/create-sample-data' },
    ]

    const contentOpsion = arrayDomain.reduce((content, item) => {
      return content += `<li><a id="aaa" onclick="clickOptions('${item.title}','${item.link}')">${item.title}</a></li>`
    }, "")
    document.querySelector('.doamin').innerHTML = contentOpsion

    let numParams = 0
    document.getElementById('addParam').onclick = () => {
      numParams++
      const listParameter = Array.from({ length: numParams }).reduce((content, item) => {
        return content += `
          <div class="parameter">
            <div class="input" style="width: 24%;"><input id="keyParam" type="text" placeholder="key" value=""></div>
            <div class="input" style="width: 74%;">
              <input id="parameter" type="text" placeholder="value" value="">
            </div>
          </div>
        `
      }, "")
      document.querySelector('.renderParamter').innerHTML = listParameter
    }

    window.clickOptions = (title, link) => {
      document.getElementById('select-domain').innerHTML = title
      document.getElementById('url').value = window.location.origin + link
    }


    document.getElementById('execute').onclick = () => {
      const valueUrl = document.getElementById('url').value
      const keyParams = document.getElementById('keyParam')?.value
      const valueParams = document.getElementById('parameter')?.value


      const urlOpen = keyParams === '' && valueParams ==='' ? valueUrl : `${valueUrl}?${keyParams}=${valueParams}`

      // console.log(urlOpen)
      if(keyParams === 'token') {
        fetch(urlOpen,{ method: 'GET',}).then((data) => {
          if(data.status === 200){
            showSuccessToast(data.status, 'success')
          }else {
            showSuccessToast(data.status, 'error')
          }
        }).catch((error) => {showSuccessToast(error, 'error')})
      }else {
        window.open(urlOpen, "_blank");
      }
    }

    

   
   
    



  </script>
  
  
  <script>


    // Background squares
    const ulSquares = document.querySelector("ul.squares")

    for (let i = 0; i < 11; i++) {
      const li = document.createElement("li");

      const random = (min, max) => Math.random() * (max - min) + min

      const size = Math.floor(random(10, 120));
      const position = random(1, 99);
      const delay = random(5, 0.1);
      const duration = random(24, 12);

      li.style.width = `${size}px`
      li.style.height = `${size}px`
      li.style.bottom = `-${size}px`

      li.style.left = `${position}%`;

      li.style.animationDelay = `${delay}s`
      li.style.animationDuration = `${duration}s`

      opacity: 0;
      li.style.animationTimingFunction = `cubic-bezier(${Math.random()}, ${Math.random()}, ${Math.random()}, ${Math.random()}, ${Math.random()}, )`

      ulSquares.appendChild(li);

    }
  </script>

  <script>

    function addData(){
     
    }

    // Toast function
  function showSuccessToast(message, type) {
    toast({
      title: "Success !",
      message: message,
      type: type,
      duration: 5000
    });
  }


function toast({ title = "", message = "", type = "info", duration = 3000 }) {
  const main = document.getElementById("toast");
  if (main) {
    const toast = document.createElement("div");

    // Auto remove toast
    const autoRemoveId = setTimeout(function () {
      main.removeChild(toast);
    }, duration + 1000);

    // Remove toast when clicked
    toast.onclick = function (e) {
      if (e.target.closest(".toast__close")) {
        main.removeChild(toast);
        clearTimeout(autoRemoveId);
      }
    };

    const icons = {
      success: "fas fa-check-circle",
      info: "fas fa-info-circle",
      warning: "fas fa-exclamation-circle",
      error: "fas fa-exclamation-circle"
    };
    const icon = icons[type];
    const delay = (duration / 1000).toFixed(2);

    toast.classList.add("toast", `toast--${type}`);
    toast.style.animation = `slideInLeft ease .3s, fadeOut linear 1s ${delay}s forwards`;

    toast.innerHTML = `
                    <div class="toast__icon">
                        <i class="${icon}"></i>
                    </div>
                    <div class="toast__body">
                        <h3 class="toast__title">${title}</h3>
                        <p class="toast__msg">${message}</p>
                    </div>
                    <div class="toast__close">
                        <i class="fas fa-times"></i>
                    </div>
                `;
    main.appendChild(toast);
  }
}
  </script>
</body>

</html>